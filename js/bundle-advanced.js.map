{"version":3,"sources":["wp:///js\\bundle-advanced.js","wp:///src\\examples\\AdvancedExample\\index.js"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","onRecreateCanvas","animate","cubeRotation","THREE","Euler","x","y","react3Renderer","render","_react2","createElement","width","height","context","antialias","mainCamera","name","fov","aspect","near","far","position","cameraPosition","rotation","depth","color","canvas","requestAnimationFrame","_react","_React3Renderer","_React3Renderer2","_three","document","getElementById","Vector3"],"mappings":"AAAAA,cAAc,IAER,SAAUC,OAAQC,QAASC,qBAEhCF,OAAOC,QAAUC,oBAAoB,IAKhC,SAAUF,OAAQC,QAASC,qBAEhC,YAcA,SAASC,yBAAwBC,KAAO,GAAIA,KAAOA,IAAIC,WAAc,MAAOD,IAAc,IAAIE,UAAa,IAAW,MAAPF,IAAe,IAAK,GAAIG,OAAOH,KAAWI,OAAOC,UAAUC,eAAeC,KAAKP,IAAKG,OAAMD,OAAOC,KAAOH,IAAIG,KAAgC,OAAtBD,QAAOM,QAAUR,IAAYE,OAElQ,QAASO,wBAAuBT,KAAO,MAAOA,MAAOA,IAAIC,WAAaD,KAAQQ,QAASR,KCRxF,QAASU,qBAKT,QAASC,WACPC,aAAe,GAAIC,OAAMC,MACvBF,aAAaG,EAAI,GACjBH,aAAaI,EAAI,GACjB,GAGFC,eAAeC,OAAOC,QAAAX,QAAAY,cAAA,UACpBC,MAAOA,MACPC,OAAQA,OAERZ,iBAAkBA,iBAElBa,QAAQ,KAERC,WAAA,EACAC,WAAW,UAEXN,QAAAX,QAAAY,cAAA,aACED,QAAAX,QAAAY,cAAA,qBACEM,KAAK,SACLC,IAAK,GACLC,OAAQP,MAAQC,OAChBO,KAAM,GACNC,IAAK,IAELC,SAAUC,iBAEZb,QAAAX,QAAAY,cAAA,QACEa,SAAUrB,cAEVO,QAAAX,QAAAY,cAAA,eACEC,MAAO,EACPC,OAAQ,EACRY,MAAO,IAETf,QAAAX,QAAAY,cAAA,qBACEe,MAAO,cAIJC,QAEXC,sBAAsB1B,SAjExB,GAAA2B,QAAAxC,oBAAA,GDaKqB,QAAUV,uBAAuB6B,QCZtCC,gBAAAzC,oBAAA,IDgBK0C,iBAAmB/B,uBAAuB8B,iBCf/CE,OAAA3C,oBAAA,KAAYe,MDmBCd,wBAAwB0C,QCf/BL,OAASM,SAASC,eAAe,UAEjC1B,eAAiB,GAAAuB,kBAAAhC,QAEjBa,MAAQ,IACRC,OAAS,IAETU,eAAiB,GAAInB,OAAM+B,QAAQ,EAAG,EAAG,GAE3ChC,aAAe,GAAIC,OAAMC,KAqD7BH","file":"js\\bundle-advanced.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(2);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _React3Renderer = __webpack_require__(29);\n\t\n\tvar _React3Renderer2 = _interopRequireDefault(_React3Renderer);\n\t\n\tvar _three = __webpack_require__(126);\n\t\n\tvar THREE = _interopRequireWildcard(_three);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// ^ Look mom, no react-dom!\n\t\n\tvar canvas = document.getElementById('canvas'); // see advanced.html :)\n\t\n\tvar react3Renderer = new _React3Renderer2.default();\n\t\n\tvar width = 800;\n\tvar height = 600;\n\t\n\tvar cameraPosition = new THREE.Vector3(0, 0, 5);\n\t\n\tvar cubeRotation = new THREE.Euler();\n\t\n\tfunction onRecreateCanvas() {\n\t  // no need to deal with this now, but here we'd need to create a new canvas and\n\t  // re-render the scene there.\n\t}\n\t\n\tfunction animate() {\n\t  cubeRotation = new THREE.Euler(cubeRotation.x + 0.1, cubeRotation.y + 0.1, 0);\n\t\n\t  react3Renderer.render(_react2.default.createElement(\n\t    'react3',\n\t    {\n\t      width: width,\n\t      height: height,\n\t\n\t      onRecreateCanvas: onRecreateCanvas,\n\t\n\t      context: '3d',\n\t\n\t      antialias: true,\n\t      mainCamera: 'camera'\n\t    },\n\t    _react2.default.createElement(\n\t      'scene',\n\t      null,\n\t      _react2.default.createElement('perspectiveCamera', {\n\t        name: 'camera',\n\t        fov: 75,\n\t        aspect: width / height,\n\t        near: 0.1,\n\t        far: 1000,\n\t\n\t        position: cameraPosition\n\t      }),\n\t      _react2.default.createElement(\n\t        'mesh',\n\t        {\n\t          rotation: cubeRotation\n\t        },\n\t        _react2.default.createElement('boxGeometry', {\n\t          width: 1,\n\t          height: 1,\n\t          depth: 1\n\t        }),\n\t        _react2.default.createElement('meshBasicMaterial', {\n\t          color: 0xff0000\n\t        })\n\t      )\n\t    )\n\t  ), canvas);\n\t\n\t  requestAnimationFrame(animate);\n\t}\n\t\n\tanimate();\n\n/***/ })\n]);\n\n\n","// see advanced.html :)\r\n\r\nimport React from 'react';\r\nimport React3Renderer from 'react-three-renderer/lib/React3Renderer';\r\nimport * as THREE from 'three';\r\n\r\n// ^ Look mom, no react-dom!\r\n\r\nconst canvas = document.getElementById('canvas');\r\n\r\nconst react3Renderer = new React3Renderer();\r\n\r\nconst width = 800;\r\nconst height = 600;\r\n\r\nconst cameraPosition = new THREE.Vector3(0, 0, 5);\r\n\r\nlet cubeRotation = new THREE.Euler();\r\n\r\nfunction onRecreateCanvas() {\r\n  // no need to deal with this now, but here we'd need to create a new canvas and\r\n  // re-render the scene there.\r\n}\r\n\r\nfunction animate() {\r\n  cubeRotation = new THREE.Euler(\r\n    cubeRotation.x + 0.1,\r\n    cubeRotation.y + 0.1,\r\n    0\r\n  );\r\n\r\n  react3Renderer.render(<react3\r\n    width={width}\r\n    height={height}\r\n\r\n    onRecreateCanvas={onRecreateCanvas}\r\n\r\n    context=\"3d\"\r\n\r\n    antialias\r\n    mainCamera=\"camera\"\r\n  >\r\n    <scene>\r\n      <perspectiveCamera\r\n        name=\"camera\"\r\n        fov={75}\r\n        aspect={width / height}\r\n        near={0.1}\r\n        far={1000}\r\n\r\n        position={cameraPosition}\r\n      />\r\n      <mesh\r\n        rotation={cubeRotation}\r\n      >\r\n        <boxGeometry\r\n          width={1}\r\n          height={1}\r\n          depth={1}\r\n        />\r\n        <meshBasicMaterial\r\n          color={0xff0000}\r\n        />\r\n      </mesh>\r\n    </scene>\r\n  </react3>, canvas);\r\n\r\n  requestAnimationFrame(animate);\r\n}\r\n\r\nanimate();\r\n\n\n\n"],"sourceRoot":""}